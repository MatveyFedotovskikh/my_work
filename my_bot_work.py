def write_top(self,i,all_student)-> None:
            
            
            embed1 = disnake.Embed(
                title="Table top Rocket Coins",
                description='Rulse:\nü§õ -100 in top\nü§ú +100 in top\nüëà -10 in top\nüëâ +10 in top\n‚úã Delit Table',
                color=disnake.Colour.yellow(),
                #timestamp=datetime.datetime.now(),
            )

            embed1.set_author(
                name="All top coins",
                # url="https://disnake.dev/",
                icon_url="https://em-content.zobj.net/source/noto-emoji-animations/344/rocket_1f680.gif",
            )
            embed1.set_footer(
                text="Rocket Tech School",
                icon_url="https://em-content.zobj.net/source/noto-emoji-animations/344/rocket_1f680.gif",
            )
            
            embed1.set_thumbnail(url="https://em-content.zobj.net/source/noto-emoji-animations/344/rocket_1f680.gif")
            
            all_student_in_tab = all_student[i:i+10]
            all_student_in_tab = self.corect_list_student(all_student_in_tab)
            if i==0:
                embed1.add_field(name=f"üèÜ # {all_student_in_tab[0][0]}", value=f'{all_student_in_tab[0][1]} |üöÄ{all_student_in_tab[0][2]}üöÄ| {all_student_in_tab[0][3]}', inline=False)
                embed1.add_field(name=f"ü•à # {all_student_in_tab[1][0]}", value=f'{all_student_in_tab[1][1]} |üöÄ{all_student_in_tab[1][2]}üöÄ| {all_student_in_tab[1][3]}', inline=False)
                embed1.add_field(name=f"ü•â # {all_student_in_tab[2][0]}", value=f'{all_student_in_tab[2][1]} |üöÄ{all_student_in_tab[2][2]}üöÄ| {all_student_in_tab[2][3]}', inline=False)
            else:
                embed1.add_field(name=f"Top {i+1} # {all_student_in_tab[0][0]}", value=f'{all_student_in_tab[0][1]} |üöÄ{all_student_in_tab[0][2]}üöÄ| {all_student_in_tab[0][3]}', inline=False)
                embed1.add_field(name=f"Top {i+2} # {all_student_in_tab[1][0]}", value=f'{all_student_in_tab[1][1]} |üöÄ{all_student_in_tab[1][2]}üöÄ| {all_student_in_tab[1][3]}', inline=False)
                embed1.add_field(name=f"Top {i+3} # {all_student_in_tab[2][0]}", value=f'{all_student_in_tab[2][1]} |üöÄ{all_student_in_tab[2][2]}üöÄ| {all_student_in_tab[2][3]}', inline=False)
            embed1.add_field(name=f"Top {i+4} # {all_student_in_tab[3][0]}", value=f'{all_student_in_tab[3][1]} |üöÄ{all_student_in_tab[3][2]}üöÄ| {all_student_in_tab[3][3]}', inline=False)
            embed1.add_field(name=f"Top {i+5} # {all_student_in_tab[4][0]}", value=f'{all_student_in_tab[4][1]} |üöÄ{all_student_in_tab[4][2]}üöÄ| {all_student_in_tab[4][3]}', inline=False)
            embed1.add_field(name=f"Top {i+6} # {all_student_in_tab[5][0]}", value=f'{all_student_in_tab[5][1]} |üöÄ{all_student_in_tab[5][2]}üöÄ| {all_student_in_tab[5][3]}', inline=False)
            embed1.add_field(name=f"Top {i+7} # {all_student_in_tab[6][0]}", value=f'{all_student_in_tab[6][1]} |üöÄ{all_student_in_tab[6][2]}üöÄ| {all_student_in_tab[6][3]}', inline=False)
            embed1.add_field(name=f"Top {i+8} # {all_student_in_tab[7][0]}", value=f'{all_student_in_tab[7][1]} |üöÄ{all_student_in_tab[7][2]}üöÄ| {all_student_in_tab[7][3]}', inline=False)
            embed1.add_field(name=f"Top {i+9} # {all_student_in_tab[8][0]}", value=f'{all_student_in_tab[8][1]} |üöÄ{all_student_in_tab[8][2]}üöÄ| {all_student_in_tab[8][3]}', inline=False)
            embed1.add_field(name=f"Top {i+10} # {all_student_in_tab[9][0]}", value=f'{all_student_in_tab[9][1]} |üöÄ{all_student_in_tab[9][2]}üöÄ| {all_student_in_tab[9][3]}', inline=False)
            return embed1

async def on_off_button(self) -> None:
            print(self.children)
            for items in self.children:
                if items.label == 'üëâ'or items.label == 'ü§ú':
                    if i==count_student-10:
                        items.disabled = True
                    else:
                        items.disabled = False
                if items.label == 'üëà' or items.label == 'ü§õ':
                    if i==0:
                        items.disabled = True
                    else:
                        items.disabled = False
            
            await self.message.edit(view=self)
        
        @discord.ui.button(label = 'ü§õ', style=discord.ButtonStyle.gray,disabled=True)
        async def SuperDown(self, interaction: discord.Interaction, button:discord.ui.Button) -> None:
            global i
            i-=100
            if i<0:
                i=0
            embed = self.write_top(i,self.all_student)
            self.foo = False
            await self.message1.edit(embed=embed)
            await interaction.response.edit_message(view=self)
            await self.on_off_button()

        @discord.ui.button(label = 'üëà', style=discord.ButtonStyle.gray,disabled=True)
        async def Down(self, interaction: discord.Interaction, button:discord.ui.Button) -> None:
            global i
            i-=10
            if i<0:
                i=0
            embed = self.write_top(i,self.all_student)
            self.foo = False
            await self.message1.edit(embed=embed)
            await interaction.response.edit_message(view=self)
            await self.on_off_button()

        @discord.ui.button(label = 'üëâ', style=discord.ButtonStyle.gray)
        async def Up(self, interaction: discord.Interaction, button:discord.ui.Button) -> None:
            
            global i
            i+=10
            if i > count_student-10:
                i = count_student-10
            embed = self.write_top(i,self.all_student)
            self.foo = True
            await self.message1.edit(embed=embed)
            await interaction.response.edit_message(view=self)
            await self.on_off_button()
        
    

        @discord.ui.button(label = 'ü§ú', style=discord.ButtonStyle.gray)
        async def SuperUp(self, interaction: discord.Interaction, button:discord.ui.Button) -> None:
            
            global i
            i+=100
            if i > count_student-10:
                i = count_student-10
            embed = self.write_top(i,self.all_student)
            self.foo = True
            await self.message1.edit(embed=embed)
            await interaction.response.edit_message(view=self)
            await self.on_off_button()
            
        
        @discord.ui.button(label = '‚úãStop', style=discord.ButtonStyle.danger)
        async def Delete(self, interaction: discord.Interaction, button:discord.ui.Button) -> None:
            
            await self.message1.delete()
            await self.message.delete()
        

    class MyView(discord.ui.View):
        global ctx_flavor 

        async def on_timeout(self):
            for child in self.children:
                child.placeholder = '‚ùå–í—Ä–µ–º—è –≤—ã–±–æ—Ä–∞ –∏—Å—Ç–µ–∫–ª–æ‚ùå'
                child.disabled = True 
            await message_flavor.edit(content = f'‚ùå<@{ctx_flavor.author.id}> –í—Ä–µ–º—è –≤—ã–±–æ—Ä–∞ –∏—Å—Ç–µ–∫–ª–æ‚ùå',view=self)
            await asyncio.sleep(15)
            await message_flavor.delete()
            await message_img.delete()


        @discord.ui.select(
            placeholder = "–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É", 
            min_values = 1, 
            max_values = 1,
            disabled=False,
            options = [ 
                discord.SelectOption(
                    label="–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è –º—ã—à—å –ø—Ä–æ–≤–æ–¥–Ω–∞—è",
                    description="–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è –º—ã—à—å –ø—Ä–æ–≤–æ–¥–Ω–∞—è –¶–µ–Ω–∞: 2600 RC",
                    default = False,
                    emoji='üñ±'
                ),
                discord.SelectOption(
                    label="–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è –º—ã—à—å –∏ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞",
                    description="–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è –º—ã—à—å –∏ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¶–µ–Ω–∞: 3000 RC",
                    default = False,
                    emoji='‚å®Ô∏è'
                ),
                discord.SelectOption(
                    label="–ù–∞—É—à–Ω–∏–∫–∏",
                    description="–ù–∞—É—à–Ω–∏–∫–∏ –¶–µ–Ω–∞: 3000 RC",
                    default = False,
                    emoji='üéß'
                ),
                discord.SelectOption(
                    label="Roblox",
                    description="Gift-card –Ω–∞ 800 Robux –¶–µ–Ω–∞: 2000 RC",
                    default = False,
                    emoji='üí∞'
                ),
                discord.SelectOption(
                    label="Netflix",
                    description="1 –º–µ—Å—è—Ü –ø–æ–¥–ø–∏—Å–∫–∏ –¶–µ–Ω–∞: 2800 RC",
                    default = False,
                    emoji='üì∫'
                ),
                discord.SelectOption(
                    label="Spotify",
                    description="2 –º–µ—Å—è—Ü–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –¶–µ–Ω–∞: 2000 RC",
                    default = False,
                    emoji='üéµ'
                ),
                discord.SelectOption(
                    label="Money",
                    description="10$ –Ω–∞ –∫–∞—Ä—Ç—É —Ç–≤–æ–∏—Ö —Ä–æ–¥–∏—Ç–µ–ª–µ–π –¶–µ–Ω–∞: 2000 RC",
                    default = False,
                    emoji='üí≥'
                ),
                discord.SelectOption(
                    label="Discord Intro",
                    description="1 –º–µ—Å—è—Ü –ø–æ–¥–ø–∏—Å–∫–∏ –¶–µ–Ω–∞: 2000 RC",
                    default = False,
                    emoji='üíé'
                ),
                discord.SelectOption(
                    label="Steam",
                    description="$10 –Ω–∞ –∫–∞—Ä—Ç—É Steam –¶–µ–Ω–∞: 2000 RC",
                    default = False,
                    emoji='üéÆ'
                ),
                discord.SelectOption(
                    label="–ì—Ä—É–ø–ø–æ–≤–æ–π —É—Ä–æ–∫",
                    description="–ì—Ä—É–ø–ø–æ–≤–æ–π —É—Ä–æ–∫ (80 –º–∏–Ω—É—Ç) –¶–µ–Ω–∞: 1000 RC",
                    default = False,
                    emoji='üöÄ'
                ),
                discord.SelectOption(
                    label="–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π —É—Ä–æ–∫",
                    description="–ì—Ä—É–ø–ø–æ–≤–æ–π —É—Ä–æ–∫ (50 –º–∏–Ω—É—Ç) –¶–µ–Ω–∞: 1500 RC",
                    default = False,
                    emoji='üöÄ'
                )
            ]  
        )

        async def first_select_callback(self,select,interaction):
            global ctx_flavor
            for child in self.children:
                child.placeholder = f'{interaction.values[0]}‚úÖ'
                child.disabled = True 
            
            await select.response.edit_message(view=self)
            data = DataBase_client()
            if select.user.id != ctx_flavor.author.id:
                await message_flavor.edit(content = f'‚ùå<@{select.user.id}> –î–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –¥—Ä—É–≥–æ–π —á–µ–ª–æ–≤–µ–∫, –ø–æ–ø—Ä–æ–±—É–π –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—É !rocket_shop –∏ –≤—ã–±—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑‚ùå')
                return
        
            link_client = data.take_link_client(ctx_flavor.author.id,ctx_flavor.author) #data.take_link_client(ctx_flavor.author.id,ctx_flavor.author)
            if link_client is False:
                await message_flavor.edit(content = f'‚ùå<@{ctx_flavor.author.id}> –Ø –Ω–µ –Ω–∞—à–µ–ª —Ç–µ–±—è –≤ –Ω–∞—à–µ–π –ë–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –ù–∞–ø–∏—à–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ <@697828423116259479>, –æ–Ω –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Ä–µ—à–∏—Ç—å —Ç–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É')
                return
            
            score_user = data.take_score_bot(ctx_flavor.author)
            if score_user < rocket_shop_choice[interaction.values[0]]:
                await message_flavor.edit(content = f'‚ùå<@{ctx_flavor.author.id}> –¢–µ–±–µ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç {rocket_shop_choice[interaction.values[0]]-score_user} Rocket Coins ‚ùå')
            else:
                if data.many_task_one_person(ctx_flavor.author):
                    await message_flavor.edit(content = f'‚ùå<@{ctx_flavor.author.id}> –£ —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å –ø–æ–∫—É–ø–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –∂–¥–µ—Ç —Å–≤–æ–µ–≥–æ –ø–æ—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è, –µ—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –∑–∞–Ω–æ–≤–æ –≤—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä—ã, —Ç–æ –Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É !clear_shop ‚ùå')
                else:
                    data.write_task(link_client,interaction.values[0],ctx_flavor.author.id,ctx_flavor.author)
                    await message_flavor.edit(content = (
                        f"–í—Å–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ ‚úÖ\n\n"
                        f"{ctx_flavor.author} —Ç—ã –≤—ã–±—Ä–∞–ª {interaction.values[0]}\n" 
                        "–í —Ç–µ—á–µ–Ω–∏–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –¥–Ω–µ–π —Å —Ç–æ–±–æ–π —Å–≤—è–∂—É—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –Ω–∞—à–µ–π —à–∫–æ–ª—ã\n" 
                        "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –æ—Ç—Å–ª–µ–¥–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–≤–æ–µ–≥–æ –∑–∞–∫–∞–∑–∞, –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É !my_shopping"))
            ctx_flavor = None
